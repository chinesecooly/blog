services:
  blog-client-dev:
    build:
      context: .
      target: dev
      dockerfile: Dockerfile-client
    container_name: client
    ports:
      - "3000:3000"
    networks:
      nginx-net:
    depends_on:
      - nginx
    profiles:
      - dev

  blog-client-prod:
    build:
      context: .
      target: prod
      dockerfile: Dockerfile-client
    container_name: client
    networks:
      nginx-net:
    depends_on:
      - nginx
    profiles:
      - prod

  blog-server-dev:
    build:
      context: .
      target: dev
      dockerfile: Dockerfile-server
    container_name: server
    ports:
      - "8000:8000"
    environment:
      - MYSQL_URL=jdbc:mysql://mysql/blog?serverTimezone=Asia/Shanghai
    networks:
      mysql-net:
      nginx-net:
    depends_on:
      - mysql
      - nginx
    profiles:
      - dev

  blog-server-prod:
    build:
      context: .
      target: prod
      dockerfile: Dockerfile-server
    container_name: server
    environment:
      - MYSQL_URL=jdbc:mysql://mysql/blog?serverTimezone=Asia/Shanghai
    networks:
      mysql-net:
      nginx-net:
    depends_on:
      - mysql
      - nginx
    profiles:
      - prod

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=blog
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_config:/etc/mysql/conf.d
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      mysql-net:

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=ningyu.ink
      - NGINX_PORT=80
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      nginx-net:

volumes:
  mysql_data:
  mysql_config:

networks:
  mysql-net:
    driver: bridge
  nginx-net:
    driver: bridge
